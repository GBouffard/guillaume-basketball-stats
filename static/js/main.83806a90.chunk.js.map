{"version":3,"sources":["imagesUrls.js","PlayerBiography.js","SeasonSelect.js","GamesCounter.js","TableHeader.js","AllGamesStats.js","calculationHelper.js","TotalsAndAverageStats.js","Stats.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","process","imagesUrls","boubou","flag","frenchFlag","alt","className","src","PlayerBiography","SeasonSelect","seasons","onChange","value","seasonsList","defaultValue","length","map","season","i","GamesCounter","gamesPlayed","seasonStats","points","TableHeader","AllGamesStats","day","index","rebounds","assists","addStats","arr","reduce","total","number","calculateTotal","calculateAverage","noValuesLength","filter","el","divider","toFixed","stats","Object","keys","App","useState","selectedSeason","setSelectedSeason","e","target","TotalsAndAverageStats","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83806a90.chunk.js","sourcesContent":["const baseUrl = process.env.PUBLIC_URL\n\nconst imagesUrls = {\n  boubou: `${baseUrl}/images/Boubou.jpg`,\n  flag: `${baseUrl}/images/France.png`\n}\n\nexport default imagesUrls\n","\nimport React from 'react'\nimport imagesUrls from './imagesUrls'\n\nconst frenchFlag = (\n  <img\n    alt='Boubou'\n    className='french-flag'\n    src={imagesUrls.flag}\n  />\n)\n\nconst PlayerBiography = () => <div className='app-grid__player-box'>\n  <img\n    alt='Boubou'\n    className='boubou-image'\n    src={imagesUrls.boubou}\n  />\n  <div className='player-info'>\n    <div>Name: <strong>BOUFFARD Guillaume</strong></div>\n    <div>D.O.B: <strong>09/04/1980</strong></div>\n    <div>Height: <strong>169cm</strong></div>\n    <div>Weight: <strong>64 Kgs</strong></div>\n    <div className='nationality'>Nationality: {frenchFlag}</div>\n    <div>Position: <strong>Point Guard</strong></div>\n  </div>\n</div>\n\nexport default PlayerBiography\n","\nimport React from 'react'\n\nconst makeOptions = seasons =>\n  seasons.map((season, i) => (\n    <option value={season} key={i}>\n      {season}\n    </option>\n  ))\n\nconst SeasonSelect = ({ onChange, value, seasonsList }) => {\n  return (\n    <select\n      onChange={onChange}\n      value={value}\n      defaultValue={seasonsList[seasonsList.length - 1]}\n    >\n      {makeOptions(seasonsList)}\n    </select>\n  )\n}\n\nexport default SeasonSelect\n","import React from 'react'\n\nconst GamesCounter = ({ seasonStats }) => {\n  const gamesPlayed = seasonStats.points.length\n  return <div className='app-grid__games-counter'>{`${gamesPlayed} games`}</div>\n}\n\nexport default GamesCounter\n","\nimport React from 'react'\n\nconst TableHeader = ({ seasonStats }) => (\n  <>\n    <div className='app-grid__points header'>\n      POINTS\n    </div>\n    <div className='app-grid__rebounds header'>\n      REBOUNDS\n    </div>\n    <div className='app-grid__assists header'>\n      ASSISTS\n    </div>\n  </>\n)\n\nexport default TableHeader\n","import React from 'react'\n\nconst AllGamesStats = ({ seasonStats }) => seasonStats.points.map((day, index) => (\n  <>\n    <div className='app-grid__points'>\n      {seasonStats.points[index]}\n    </div>\n    <div className='app-grid__rebounds'>\n      {seasonStats.rebounds ? seasonStats.rebounds[index] : '-'}\n    </div>\n    <div className='app-grid__assists'>\n      {seasonStats.assists ? seasonStats.assists[index] : '-'}\n    </div>\n  </>\n))\n\nexport default AllGamesStats\n","const addStats = arr => arr.reduce((total, number) => {\n  return number !== '-' ? total + number : total\n}, 0)\n\nconst divider = arr => {\n  let noValuesLength = 0\n  noValuesLength = arr.filter(el => el === '-').length\n  return arr.length - noValuesLength\n}\n\nexport const calculateTotal = (arr) => arr\n  ? addStats(arr)\n  : '-'\n\nexport const calculateAverage = (arr) => arr\n  ? (addStats(arr) / divider(arr)).toFixed(2)\n  : '-'\n","import React from 'react'\nimport {\n  calculateTotal,\n  calculateAverage\n} from './calculationHelper'\n\nconst AllGamesStats = ({ seasonStats }) => (\n  <div className='app-grid__header'>\n    <div className='app-grid__totals-and-average'>TOTALS & AVERAGE</div>\n    <div className='app-grid__totals'><div>{calculateTotal(seasonStats.points)}</div>\n      <div>{calculateTotal(seasonStats.rebounds)}</div>\n      <div>{calculateTotal(seasonStats.assists)}</div>\n    </div>\n    <div className='app-grid__average'><div>{calculateAverage(seasonStats.points)}</div>\n      <div>{calculateAverage(seasonStats.rebounds)}</div>\n      <div>{calculateAverage(seasonStats.assists)}</div>\n    </div>\n  </div>\n)\n\nexport default AllGamesStats\n","const stats = {\n  '2020-2021': {\n    points: [8, 4, 10, 34, 7],\n    rebounds: null,\n    assists: null\n  },\n\n  '2021-2022': {\n    points: [19, 9, 9, 18, 25, 9, 8, 8, 10, 15, 14],\n    rebounds: ['-', '-', '-', 1, 7, 5, 5, 6, 4, 3, 9],\n    assists: ['-', '-', 6, 5, 13, 7, 5, 9, 8, 4, 9]\n  }\n}\n\nexport default stats\n","import './App.css'\nimport React, { useState } from 'react'\nimport PlayerBiography from './PlayerBiography'\nimport SeasonSelect from './SeasonSelect'\nimport GamesCounter from './GamesCounter'\nimport TableHeader from './TableHeader'\nimport AllGamesStats from './AllGamesStats'\nimport TotalsAndAverageStats from './TotalsAndAverageStats'\nimport stats from './Stats'\n\nconst seasonsList = Object.keys(stats)\n\nconst App = () => {\n  const [selectedSeason, setSelectedSeason] = useState(seasonsList[seasonsList.length - 1])\n\n  const handleSeasonChange = e => {\n    setSelectedSeason(e.target.value)\n  }\n\n  const seasonStats = stats[selectedSeason]\n\n  return (\n    <div className='app-grid'>\n      <PlayerBiography />\n\n      <SeasonSelect onChange={handleSeasonChange} value={selectedSeason} seasonsList={seasonsList} />\n\n      <GamesCounter seasonStats={seasonStats} />\n\n      <TableHeader seasonStats={seasonStats} />\n\n      <AllGamesStats seasonStats={seasonStats} />\n\n      <TotalsAndAverageStats seasonStats={seasonStats} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}